这段代码使用了OpenGL和GLFW库来创建一个窗口，并在窗口中绘制一条直线。

下面是每行代码的解释：

#include <GLFW/glfw3.h>：包含了GLFW的头文件，以便使用其提供的函数和数据类型。

void drawLine()：定义了一个名为drawLine的函数，用于绘制一条直线。

glClearColor(0.0f, 0.0f, 0.0f, 1.0f)：设置清屏颜色为黑色（RGB值为0，0，0），最后的参数为不透明度。

glClear(GL_COLOR_BUFFER_BIT)：清除颜色缓冲区，将窗口填充为之前设置的清屏颜色。

glColor3f(1.0f, 1.0f, 1.0f)：设置直线颜色为白色（RGB值为1，1，1）。

glBegin(GL_LINES)：开始绘制直线的图元（几何图形）类型。

glVertex2f(-0.5f, 0.0f)：指定直线的起点坐标。

glVertex2f(0.5f, 0.0f)：指定直线的终点坐标。

glEnd()：结束绘制直线。

glfwInit()：初始化GLFW库。

GLFWwindow* window = glfwCreateWindow(800, 600, "GLFW Line", NULL, NULL)：创建一个大小为800x600的窗口，并命名为"GLFW Line"，然后将其赋值给window变量。最后两个参数分别是屏幕的上下文和共享窗口句柄。

23-25. 这是一个错误检查，如果窗口创建失败，会终止GLFW库并返回-1。

glfwMakeContextCurrent(window)：将window设置为当前上下文（需要在使用OpenGL功能前调用）。
29-35. 这是一个循环，直到窗口被关闭。在循环的每次迭代中，调用了drawLine()函数来绘制直线。

glfwSwapBuffers(window)：交换前后缓冲区，将绘制结果显示在窗口中。

glfwPollEvents()：处理窗口事件，例如鼠标移动、键盘按键等。

return 0：程序正常结束，返回0。

总体而言，此段代码使用了OpenGL和GLFW库来创建窗口并绘制一条直线



编译： g++ drwaline.cpp -o drwaline -lglfw -lGL
